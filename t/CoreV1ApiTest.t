=begin comment

Kubernetes

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1.7.4

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('Net::RawKube::CoreV1Api');

my $api = Net::RawKube::CoreV1Api->new();
isa_ok($api, 'Net::RawKube::CoreV1Api');

#
# connect_delete_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_delete_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_delete_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_delete_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_delete_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_delete_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_delete_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_delete_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_delete_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_delete_node_proxy(name => $name, path => $path);
}

#
# connect_delete_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_delete_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# connect_get_namespaced_pod_attach test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $container = undef; # replace NULL with a proper value
    my $stderr = undef; # replace NULL with a proper value
    my $stdin = undef; # replace NULL with a proper value
    my $stdout = undef; # replace NULL with a proper value
    my $tty = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_pod_attach(name => $name, namespace => $namespace, container => $container, stderr => $stderr, stdin => $stdin, stdout => $stdout, tty => $tty);
}

#
# connect_get_namespaced_pod_exec test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $command = undef; # replace NULL with a proper value
    my $container = undef; # replace NULL with a proper value
    my $stderr = undef; # replace NULL with a proper value
    my $stdin = undef; # replace NULL with a proper value
    my $stdout = undef; # replace NULL with a proper value
    my $tty = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_pod_exec(name => $name, namespace => $namespace, command => $command, container => $container, stderr => $stderr, stdin => $stdin, stdout => $stdout, tty => $tty);
}

#
# connect_get_namespaced_pod_portforward test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $ports = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_pod_portforward(name => $name, namespace => $namespace, ports => $ports);
}

#
# connect_get_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_get_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_get_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_get_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_get_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_get_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_get_node_proxy(name => $name, path => $path);
}

#
# connect_get_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_get_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# connect_head_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_head_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_head_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_head_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_head_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_head_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_head_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_head_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_head_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_head_node_proxy(name => $name, path => $path);
}

#
# connect_head_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_head_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# connect_options_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_options_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_options_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_options_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_options_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_options_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_options_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_options_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_options_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_options_node_proxy(name => $name, path => $path);
}

#
# connect_options_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_options_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# connect_patch_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_patch_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_patch_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_patch_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_patch_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_patch_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_patch_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_patch_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_patch_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_patch_node_proxy(name => $name, path => $path);
}

#
# connect_patch_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_patch_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# connect_post_namespaced_pod_attach test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $container = undef; # replace NULL with a proper value
    my $stderr = undef; # replace NULL with a proper value
    my $stdin = undef; # replace NULL with a proper value
    my $stdout = undef; # replace NULL with a proper value
    my $tty = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_pod_attach(name => $name, namespace => $namespace, container => $container, stderr => $stderr, stdin => $stdin, stdout => $stdout, tty => $tty);
}

#
# connect_post_namespaced_pod_exec test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $command = undef; # replace NULL with a proper value
    my $container = undef; # replace NULL with a proper value
    my $stderr = undef; # replace NULL with a proper value
    my $stdin = undef; # replace NULL with a proper value
    my $stdout = undef; # replace NULL with a proper value
    my $tty = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_pod_exec(name => $name, namespace => $namespace, command => $command, container => $container, stderr => $stderr, stdin => $stdin, stdout => $stdout, tty => $tty);
}

#
# connect_post_namespaced_pod_portforward test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $ports = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_pod_portforward(name => $name, namespace => $namespace, ports => $ports);
}

#
# connect_post_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_post_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_post_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_post_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_post_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_post_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_post_node_proxy(name => $name, path => $path);
}

#
# connect_post_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_post_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# connect_put_namespaced_pod_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_put_namespaced_pod_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_put_namespaced_pod_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_put_namespaced_pod_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_put_namespaced_service_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_put_namespaced_service_proxy(name => $name, namespace => $namespace, path => $path);
}

#
# connect_put_namespaced_service_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_put_namespaced_service_proxy_with_path(name => $name, namespace => $namespace, path => $path, path2 => $path2);
}

#
# connect_put_node_proxy test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->connect_put_node_proxy(name => $name, path => $path);
}

#
# connect_put_node_proxy_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $path2 = undef; # replace NULL with a proper value
    my $result = $api->connect_put_node_proxy_with_path(name => $name, path => $path, path2 => $path2);
}

#
# create_namespace test
#
{
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespace(body => $body, pretty => $pretty);
}

#
# create_namespaced_binding test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_binding(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_config_map test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_config_map(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_endpoints test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_endpoints(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_event test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_event(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_limit_range test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_limit_range(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_persistent_volume_claim test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_persistent_volume_claim(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_pod test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_pod(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_pod_binding test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_pod_binding(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_pod_eviction test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_pod_eviction(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_pod_template test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_pod_template(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_replication_controller test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_replication_controller(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_resource_quota test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_resource_quota(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_secret test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_secret(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_service test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_service(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_namespaced_service_account test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_namespaced_service_account(namespace => $namespace, body => $body, pretty => $pretty);
}

#
# create_node test
#
{
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_node(body => $body, pretty => $pretty);
}

#
# create_persistent_volume test
#
{
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->create_persistent_volume(body => $body, pretty => $pretty);
}

#
# delete_collection_namespaced_config_map test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_config_map(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_endpoints test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_endpoints(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_event test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_event(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_limit_range test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_limit_range(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_persistent_volume_claim test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_persistent_volume_claim(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_pod test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_pod(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_pod_template test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_pod_template(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_replication_controller test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_replication_controller(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_resource_quota test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_resource_quota(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_secret test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_secret(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_namespaced_service_account test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_namespaced_service_account(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_node test
#
{
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_node(pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_collection_persistent_volume test
#
{
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->delete_collection_persistent_volume(pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# delete_namespace test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespace(name => $name, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_config_map test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_config_map(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_endpoints test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_endpoints(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_event test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_event(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_limit_range test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_limit_range(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_persistent_volume_claim test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_persistent_volume_claim(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_pod(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_pod_template test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_pod_template(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_replication_controller test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_replication_controller(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_resource_quota test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_resource_quota(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_secret test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_secret(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_service(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# delete_namespaced_service_account test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_namespaced_service_account(name => $name, namespace => $namespace, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_node(name => $name, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# delete_persistent_volume test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $grace_period_seconds = undef; # replace NULL with a proper value
    my $orphan_dependents = undef; # replace NULL with a proper value
    my $propagation_policy = undef; # replace NULL with a proper value
    my $result = $api->delete_persistent_volume(name => $name, body => $body, pretty => $pretty, grace_period_seconds => $grace_period_seconds, orphan_dependents => $orphan_dependents, propagation_policy => $propagation_policy);
}

#
# get_api_resources test
#
{
    my $result = $api->get_api_resources();
}

#
# list_component_status test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_component_status(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_config_map_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_config_map_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_endpoints_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_endpoints_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_event_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_event_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_limit_range_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_limit_range_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespace test
#
{
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespace(pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_config_map test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_config_map(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_endpoints test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_endpoints(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_event test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_event(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_limit_range test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_limit_range(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_persistent_volume_claim test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_persistent_volume_claim(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_pod test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_pod(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_pod_template test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_pod_template(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_replication_controller test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_replication_controller(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_resource_quota test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_resource_quota(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_secret test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_secret(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_service test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_service(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_namespaced_service_account test
#
{
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_namespaced_service_account(namespace => $namespace, pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_node test
#
{
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_node(pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_persistent_volume test
#
{
    my $pretty = undef; # replace NULL with a proper value
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_persistent_volume(pretty => $pretty, field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_persistent_volume_claim_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_persistent_volume_claim_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_pod_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_pod_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_pod_template_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_pod_template_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_replication_controller_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_replication_controller_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_resource_quota_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_resource_quota_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_secret_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_secret_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_service_account_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_service_account_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# list_service_for_all_namespaces test
#
{
    my $field_selector = undef; # replace NULL with a proper value
    my $include_uninitialized = undef; # replace NULL with a proper value
    my $label_selector = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $resource_version = undef; # replace NULL with a proper value
    my $timeout_seconds = undef; # replace NULL with a proper value
    my $watch = undef; # replace NULL with a proper value
    my $result = $api->list_service_for_all_namespaces(field_selector => $field_selector, include_uninitialized => $include_uninitialized, label_selector => $label_selector, pretty => $pretty, resource_version => $resource_version, timeout_seconds => $timeout_seconds, watch => $watch);
}

#
# patch_namespace test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespace(name => $name, body => $body, pretty => $pretty);
}

#
# patch_namespace_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespace_status(name => $name, body => $body, pretty => $pretty);
}

#
# patch_namespaced_config_map test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_config_map(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_endpoints test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_endpoints(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_event test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_event(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_limit_range test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_limit_range(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_persistent_volume_claim test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_persistent_volume_claim(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_persistent_volume_claim_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_persistent_volume_claim_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_pod(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_pod_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_pod_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_pod_template test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_pod_template(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_replication_controller test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_replication_controller(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_replication_controller_scale test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_replication_controller_scale(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_replication_controller_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_replication_controller_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_resource_quota test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_resource_quota(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_resource_quota_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_resource_quota_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_secret test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_secret(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_service(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_service_account test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_service_account(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_namespaced_service_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_namespaced_service_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# patch_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_node(name => $name, body => $body, pretty => $pretty);
}

#
# patch_node_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_node_status(name => $name, body => $body, pretty => $pretty);
}

#
# patch_persistent_volume test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_persistent_volume(name => $name, body => $body, pretty => $pretty);
}

#
# patch_persistent_volume_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->patch_persistent_volume_status(name => $name, body => $body, pretty => $pretty);
}

#
# proxy_delete_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_delete_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_delete_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_delete_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_delete_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_delete_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_delete_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_delete_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_delete_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_delete_node(name => $name);
}

#
# proxy_delete_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_delete_node_with_path(name => $name, path => $path);
}

#
# proxy_get_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_get_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_get_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_get_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_get_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_get_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_get_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_get_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_get_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_get_node(name => $name);
}

#
# proxy_get_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_get_node_with_path(name => $name, path => $path);
}

#
# proxy_head_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_head_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_head_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_head_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_head_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_head_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_head_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_head_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_head_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_head_node(name => $name);
}

#
# proxy_head_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_head_node_with_path(name => $name, path => $path);
}

#
# proxy_options_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_options_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_options_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_options_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_options_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_options_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_options_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_options_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_options_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_options_node(name => $name);
}

#
# proxy_options_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_options_node_with_path(name => $name, path => $path);
}

#
# proxy_patch_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_patch_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_patch_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_patch_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_patch_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_patch_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_patch_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_patch_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_patch_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_patch_node(name => $name);
}

#
# proxy_patch_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_patch_node_with_path(name => $name, path => $path);
}

#
# proxy_post_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_post_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_post_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_post_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_post_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_post_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_post_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_post_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_post_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_post_node(name => $name);
}

#
# proxy_post_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_post_node_with_path(name => $name, path => $path);
}

#
# proxy_put_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_put_namespaced_pod(name => $name, namespace => $namespace);
}

#
# proxy_put_namespaced_pod_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_put_namespaced_pod_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_put_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $result = $api->proxy_put_namespaced_service(name => $name, namespace => $namespace);
}

#
# proxy_put_namespaced_service_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_put_namespaced_service_with_path(name => $name, namespace => $namespace, path => $path);
}

#
# proxy_put_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $result = $api->proxy_put_node(name => $name);
}

#
# proxy_put_node_with_path test
#
{
    my $name = undef; # replace NULL with a proper value
    my $path = undef; # replace NULL with a proper value
    my $result = $api->proxy_put_node_with_path(name => $name, path => $path);
}

#
# read_component_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_component_status(name => $name, pretty => $pretty);
}

#
# read_namespace test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespace(name => $name, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespace_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespace_status(name => $name, pretty => $pretty);
}

#
# read_namespaced_config_map test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_config_map(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_endpoints test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_endpoints(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_event test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_event(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_limit_range test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_limit_range(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_persistent_volume_claim test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_persistent_volume_claim(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_persistent_volume_claim_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_persistent_volume_claim_status(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# read_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_pod(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_pod_log test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $container = undef; # replace NULL with a proper value
    my $follow = undef; # replace NULL with a proper value
    my $limit_bytes = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $previous = undef; # replace NULL with a proper value
    my $since_seconds = undef; # replace NULL with a proper value
    my $tail_lines = undef; # replace NULL with a proper value
    my $timestamps = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_pod_log(name => $name, namespace => $namespace, container => $container, follow => $follow, limit_bytes => $limit_bytes, pretty => $pretty, previous => $previous, since_seconds => $since_seconds, tail_lines => $tail_lines, timestamps => $timestamps);
}

#
# read_namespaced_pod_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_pod_status(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# read_namespaced_pod_template test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_pod_template(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_replication_controller test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_replication_controller(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_replication_controller_scale test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_replication_controller_scale(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# read_namespaced_replication_controller_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_replication_controller_status(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# read_namespaced_resource_quota test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_resource_quota(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_resource_quota_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_resource_quota_status(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# read_namespaced_secret test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_secret(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_service(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_service_account test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_service_account(name => $name, namespace => $namespace, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_namespaced_service_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_namespaced_service_status(name => $name, namespace => $namespace, pretty => $pretty);
}

#
# read_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_node(name => $name, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_node_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_node_status(name => $name, pretty => $pretty);
}

#
# read_persistent_volume test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $exact = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->read_persistent_volume(name => $name, pretty => $pretty, exact => $exact, export => $export);
}

#
# read_persistent_volume_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->read_persistent_volume_status(name => $name, pretty => $pretty);
}

#
# replace_namespace test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespace(name => $name, body => $body, pretty => $pretty);
}

#
# replace_namespace_finalize test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespace_finalize(name => $name, body => $body, pretty => $pretty);
}

#
# replace_namespace_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespace_status(name => $name, body => $body, pretty => $pretty);
}

#
# replace_namespaced_config_map test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_config_map(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_endpoints test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_endpoints(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_event test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_event(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_limit_range test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_limit_range(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_persistent_volume_claim test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_persistent_volume_claim(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_persistent_volume_claim_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_persistent_volume_claim_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_pod test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_pod(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_pod_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_pod_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_pod_template test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_pod_template(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_replication_controller test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_replication_controller(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_replication_controller_scale test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_replication_controller_scale(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_replication_controller_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_replication_controller_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_resource_quota test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_resource_quota(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_resource_quota_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_resource_quota_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_secret test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_secret(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_service test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_service(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_service_account test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_service_account(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_namespaced_service_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $namespace = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_namespaced_service_status(name => $name, namespace => $namespace, body => $body, pretty => $pretty);
}

#
# replace_node test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_node(name => $name, body => $body, pretty => $pretty);
}

#
# replace_node_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_node_status(name => $name, body => $body, pretty => $pretty);
}

#
# replace_persistent_volume test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_persistent_volume(name => $name, body => $body, pretty => $pretty);
}

#
# replace_persistent_volume_status test
#
{
    my $name = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $pretty = undef; # replace NULL with a proper value
    my $result = $api->replace_persistent_volume_status(name => $name, body => $body, pretty => $pretty);
}


1;
